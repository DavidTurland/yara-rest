/**
* Yara Rest Server
* A simple Yara Rest server
*
* The version of the OpenAPI document: 0.0.1
* Contact: david@turland.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ScanFile.h"
#include "Helpers.h"

#include <sstream>

namespace org::turland::yara::model
{

ScanFile::ScanFile()
{
    m_Scannerid = 0.0;
    m_ScanneridIsSet = false;
    m_Filename = "";
    m_FilenameIsSet = false;
    
}

void ScanFile::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::turland::yara::helpers::ValidationException(msg.str());
    }
}

bool ScanFile::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ScanFile::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ScanFile" : pathPrefix;

            
    return success;
}

bool ScanFile::operator==(const ScanFile& rhs) const
{
    return
    
    
    
    ((!scanneridIsSet() && !rhs.scanneridIsSet()) || (scanneridIsSet() && rhs.scanneridIsSet() && getScannerid() == rhs.getScannerid())) &&
    
    
    ((!filenameIsSet() && !rhs.filenameIsSet()) || (filenameIsSet() && rhs.filenameIsSet() && getFilename() == rhs.getFilename()))
    
    ;
}

bool ScanFile::operator!=(const ScanFile& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ScanFile& o)
{
    j = nlohmann::json();
    if(o.scanneridIsSet())
        j["scannerid"] = o.m_Scannerid;
    if(o.filenameIsSet())
        j["filename"] = o.m_Filename;
    
}

void from_json(const nlohmann::json& j, ScanFile& o)
{
    if(j.find("scannerid") != j.end())
    {
        j.at("scannerid").get_to(o.m_Scannerid);
        o.m_ScanneridIsSet = true;
    } 
    if(j.find("filename") != j.end())
    {
        j.at("filename").get_to(o.m_Filename);
        o.m_FilenameIsSet = true;
    } 
    
}

double ScanFile::getScannerid() const
{
    return m_Scannerid;
}
void ScanFile::setScannerid(double const value)
{
    m_Scannerid = value;
    m_ScanneridIsSet = true;
}
bool ScanFile::scanneridIsSet() const
{
    return m_ScanneridIsSet;
}
void ScanFile::unsetScannerid()
{
    m_ScanneridIsSet = false;
}
std::string ScanFile::getFilename() const
{
    return m_Filename;
}
void ScanFile::setFilename(std::string const& value)
{
    m_Filename = value;
    m_FilenameIsSet = true;
}
bool ScanFile::filenameIsSet() const
{
    return m_FilenameIsSet;
}
void ScanFile::unsetFilename()
{
    m_FilenameIsSet = false;
}


} // namespace org::turland::yara::model

