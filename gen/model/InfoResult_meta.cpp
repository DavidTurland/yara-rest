/**
* Yara REST Server
* A Yara REST server
*
* The version of the OpenAPI document: 0.3.0
* Contact: david@turland.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "InfoResult_meta.h"
#include "Helpers.h"

#include <sstream>

namespace org::turland::yara::model
{

InfoResult_meta::InfoResult_meta()
{
    m_Version = "";
    m_Num_threads = "";
    
}

void InfoResult_meta::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::turland::yara::helpers::ValidationException(msg.str());
    }
}

bool InfoResult_meta::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool InfoResult_meta::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "InfoResult_meta" : pathPrefix;

            
    return success;
}

bool InfoResult_meta::operator==(const InfoResult_meta& rhs) const
{
    return
    
    
    (getVersion() == rhs.getVersion())
     &&
    
    (getNumThreads() == rhs.getNumThreads())
    
    
    ;
}

bool InfoResult_meta::operator!=(const InfoResult_meta& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const InfoResult_meta& o)
{
    j = nlohmann::json::object();
    j["version"] = o.m_Version;
    j["num_threads"] = o.m_Num_threads;
    
}

void from_json(const nlohmann::json& j, InfoResult_meta& o)
{
    j.at("version").get_to(o.m_Version);
    j.at("num_threads").get_to(o.m_Num_threads);
    
}

std::string InfoResult_meta::getVersion() const
{
    return m_Version;
}
void InfoResult_meta::setVersion(std::string const& value)
{
    m_Version = value;
}
std::string InfoResult_meta::getNumThreads() const
{
    return m_Num_threads;
}
void InfoResult_meta::setNumThreads(std::string const& value)
{
    m_Num_threads = value;
}


} // namespace org::turland::yara::model

