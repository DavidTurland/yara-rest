/**
* Yara REST Server
* A Yara REST server
*
* The version of the OpenAPI document: 0.3.0
* Contact: david@turland.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * InfoResult_meta.h
 *
 * 
 */

#ifndef InfoResult_meta_H_
#define InfoResult_meta_H_


#include <string>
#include <map>
#include <nlohmann/json.hpp>

namespace org::turland::yara::model
{

/// <summary>
/// 
/// </summary>
class  InfoResult_meta
{
public:
    InfoResult_meta();
    virtual ~InfoResult_meta() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const InfoResult_meta& rhs) const;
    bool operator!=(const InfoResult_meta& rhs) const;

    /////////////////////////////////////////////
    /// InfoResult_meta members

    /// <summary>
    /// 
    /// </summary>
    std::string getVersion() const;
    void setVersion(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    std::string getNumThreads() const;
    void setNumThreads(std::string const& value);

    friend  void to_json(nlohmann::json& j, const InfoResult_meta& o);
    friend  void from_json(const nlohmann::json& j, InfoResult_meta& o);
protected:
    std::string m_Version;

    std::string m_Num_threads;

    
};

} // namespace org::turland::yara::model

#endif /* InfoResult_meta_H_ */
