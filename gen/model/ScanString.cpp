/**
* Yara REST Server
* A Yara REST server
*
* The version of the OpenAPI document: 0.4.0
* Contact: david@turland.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ScanString.h"
#include "Helpers.h"

#include <sstream>

namespace org::turland::yara::model
{

ScanString::ScanString()
{
    m_Scannerid = 0;
    m_ScanneridIsSet = false;
    m_Data = "";
    m_Length = 0;
    m_LengthIsSet = false;
    
}

void ScanString::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::turland::yara::helpers::ValidationException(msg.str());
    }
}

bool ScanString::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ScanString::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ScanString" : pathPrefix;

                
    return success;
}

bool ScanString::operator==(const ScanString& rhs) const
{
    return
    
    
    
    ((!scanneridIsSet() && !rhs.scanneridIsSet()) || (scanneridIsSet() && rhs.scanneridIsSet() && getScannerid() == rhs.getScannerid())) &&
    
    (getData() == rhs.getData())
     &&
    
    
    ((!lengthIsSet() && !rhs.lengthIsSet()) || (lengthIsSet() && rhs.lengthIsSet() && getLength() == rhs.getLength()))
    
    ;
}

bool ScanString::operator!=(const ScanString& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ScanString& o)
{
    j = nlohmann::json::object();
    if(o.scanneridIsSet())
        j["scannerid"] = o.m_Scannerid;
    j["data"] = o.m_Data;
    if(o.lengthIsSet())
        j["length"] = o.m_Length;
    
}

void from_json(const nlohmann::json& j, ScanString& o)
{
    if(j.find("scannerid") != j.end())
    {
        j.at("scannerid").get_to(o.m_Scannerid);
        o.m_ScanneridIsSet = true;
    } 
    j.at("data").get_to(o.m_Data);
    if(j.find("length") != j.end())
    {
        j.at("length").get_to(o.m_Length);
        o.m_LengthIsSet = true;
    } 
    
}

int32_t ScanString::getScannerid() const
{
    return m_Scannerid;
}
void ScanString::setScannerid(int32_t const value)
{
    m_Scannerid = value;
    m_ScanneridIsSet = true;
}
bool ScanString::scanneridIsSet() const
{
    return m_ScanneridIsSet;
}
void ScanString::unsetScannerid()
{
    m_ScanneridIsSet = false;
}
std::string ScanString::getData() const
{
    return m_Data;
}
void ScanString::setData(std::string const& value)
{
    m_Data = value;
}
int32_t ScanString::getLength() const
{
    return m_Length;
}
void ScanString::setLength(int32_t const value)
{
    m_Length = value;
    m_LengthIsSet = true;
}
bool ScanString::lengthIsSet() const
{
    return m_LengthIsSet;
}
void ScanString::unsetLength()
{
    m_LengthIsSet = false;
}


} // namespace org::turland::yara::model

