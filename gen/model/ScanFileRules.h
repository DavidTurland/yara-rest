/**
* Yara REST Server
* A Yara REST server
*
* The version of the OpenAPI document: 0.3.0
* Contact: david@turland.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ScanFileRules.h
 *
 * scan file request with accompanying rules
 */

#ifndef ScanFileRules_H_
#define ScanFileRules_H_


#include <string>
#include "Rule.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::turland::yara::model
{

/// <summary>
/// scan file request with accompanying rules
/// </summary>
class  ScanFileRules
{
public:
    ScanFileRules();
    virtual ~ScanFileRules() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ScanFileRules& rhs) const;
    bool operator!=(const ScanFileRules& rhs) const;

    /////////////////////////////////////////////
    /// ScanFileRules members

    /// <summary>
    /// 
    /// </summary>
    std::string getFilename() const;
    void setFilename(std::string const& value);
    bool filenameIsSet() const;
    void unsetFilename();
    /// <summary>
    /// 
    /// </summary>
    std::vector<org::turland::yara::model::Rule> getRules() const;
    void setRules(std::vector<org::turland::yara::model::Rule> const& value);
    bool rulesIsSet() const;
    void unsetRules();

    friend  void to_json(nlohmann::json& j, const ScanFileRules& o);
    friend  void from_json(const nlohmann::json& j, ScanFileRules& o);
protected:
    std::string m_Filename;
    bool m_FilenameIsSet;
    std::vector<org::turland::yara::model::Rule> m_Rules;
    bool m_RulesIsSet;
    
};

} // namespace org::turland::yara::model

#endif /* ScanFileRules_H_ */
